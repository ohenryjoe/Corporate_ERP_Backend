# Generated by Django 4.1.7 on 2023-04-20 18:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppraisalFrequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=50)),
                ('duration', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('is_for_probational', models.BooleanField(db_index=True, default=False)),
                ('is_adhoc', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppraisalSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('appraisal_opened_at', models.DateField()),
                ('appraisal_deadline_date', models.DateField()),
                ('status', models.CharField(choices=[('KRA Data Pending', 'Kra Data Pending'), ('KRA Data Filled', 'Kra Data Filled'), ('Appraisal Evaluation Started', 'Started'), ('Self Review Completed', 'Self Review Completed'), ('Supervisor KRA Review Completed', 'Supervisor Review Kra Completed'), ('Supervisor Performance Factor Review Completed', 'Supervisor Review Pf Completed'), ('Completed', 'Appraisal Completed')], default='KRA Data Pending', max_length=50)),
                ('appraisee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appraisal_schedules', to=settings.AUTH_USER_MODEL)),
                ('appraiser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='as_appraiser', to=settings.AUTH_USER_MODEL)),
                ('frequency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_schedules', to='appraisal.appraisalfrequency')),
            ],
            options={
                'unique_together': {('frequency', 'appraisee', 'start_date')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceImprovementPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('data', models.JSONField(default=list)),
                ('appraisal_schedule', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_improvement', to='appraisal.appraisalschedule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppraiseePerformanceIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('performance_indicators', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=False)),
                ('appraisal_schedule', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_indicator', to='appraisal.appraisalschedule')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AppraisalPerformanceFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True)),
                ('scores', models.JSONField(default=list)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_performance_factors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Appraisal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('self_reviewed_at', models.DateTimeField(null=True)),
                ('supervisor_reviewed_at', models.DateTimeField(null=True)),
                ('supervisor_pffs_reviewed_at', models.DateTimeField(null=True)),
                ('completed_at', models.DateTimeField(null=True)),
                ('KRA_data', models.JSONField(default=list)),
                ('KRA_total_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('KRA_total_obtained_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('KRA_total_percentage', models.DecimalField(decimal_places=0, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('PFSS_data', models.JSONField(default=list)),
                ('PFSS_total_percentage', models.DecimalField(decimal_places=0, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_percentage', models.DecimalField(decimal_places=0, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('schedule', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='appraisal', to='appraisal.appraisalschedule')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
